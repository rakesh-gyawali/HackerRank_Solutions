

    Schema
    Object Type
    Object Name
    Script

Script


  CREATE TABLE "OEHR_COUNTRIES" 
   (	"COUNTRY_ID" CHAR(2) CONSTRAINT "OEHR_COUNTRY_ID_NN" NOT NULL ENABLE, 
	"COUNTRY_NAME" VARCHAR2(40), 
	"REGION_ID" NUMBER, 
	 CONSTRAINT "OEHR_COUNTRY_C_ID_PK" PRIMARY KEY ("COUNTRY_ID") ENABLE
   ) ORGANIZATION INDEX NOCOMPRESS ;

  CREATE TABLE "OEHR_CUSTOMERS" 
   (	"CUSTOMER_ID" NUMBER(6,0) GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 999999 INCREMENT BY 1 START WITH 996 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"CUST_FIRST_NAME" VARCHAR2(20) CONSTRAINT "CUST_FNAME_NN" NOT NULL ENABLE, 
	"CUST_LAST_NAME" VARCHAR2(20) CONSTRAINT "CUST_LNAME_NN" NOT NULL ENABLE, 
	"STREET_ADDRESS" VARCHAR2(40), 
	"POSTAL_CODE" VARCHAR2(10), 
	"CITY" VARCHAR2(30), 
	"STATE_PROVINCE" VARCHAR2(10), 
	"COUNTRY_ID" CHAR(2), 
	"PHONE_NUMBER" VARCHAR2(25), 
	"NLS_LANGUAGE" VARCHAR2(3), 
	"NLS_TERRITORY" VARCHAR2(30), 
	"CREDIT_LIMIT" NUMBER(9,2), 
	"CUST_EMAIL" VARCHAR2(30), 
	"ACCOUNT_MGR_ID" NUMBER(6,0), 
	 CONSTRAINT "OEHR_CUST_CL_MAX" CHECK (credit_limit <= 5000) ENABLE, 
	 CONSTRAINT "OEHR_CUSTOMER_ID_MIN" CHECK (customer_id > 0) ENABLE, 
	 CONSTRAINT "OEHR_CUSTOMERS_PK" PRIMARY KEY ("CUSTOMER_ID")
  USING INDEX  ENABLE
   ) ;

  CREATE TABLE "OEHR_DEPARTMENTS" 
   (	"DEPARTMENT_ID" NUMBER(4,0) GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9990 INCREMENT BY 10 START WITH 280 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"DEPARTMENT_NAME" VARCHAR2(30) CONSTRAINT "OEHR_DEPT_NAME_NN" NOT NULL ENABLE, 
	"MANAGER_ID" NUMBER(6,0), 
	"LOCATION_ID" NUMBER(4,0), 
	 CONSTRAINT "OEHR_DEPT_ID_PK" PRIMARY KEY ("DEPARTMENT_ID")
  USING INDEX  ENABLE
   ) ;

  CREATE TABLE "OEHR_EMPLOYEES" 
   (	"EMPLOYEE_ID" NUMBER(6,0) GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 207 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"FIRST_NAME" VARCHAR2(20), 
	"LAST_NAME" VARCHAR2(25) CONSTRAINT "OEHR_EMP_LAST_NAME_NN" NOT NULL ENABLE, 
	"EMAIL" VARCHAR2(25) CONSTRAINT "OEHR_EMP_EMAIL_NN" NOT NULL ENABLE, 
	"PHONE_NUMBER" VARCHAR2(20), 
	"HIRE_DATE" DATE CONSTRAINT "OEHR_EMP_HIRE_DATE_NN" NOT NULL ENABLE, 
	"JOB_ID" VARCHAR2(10) CONSTRAINT "OEHR_EMP_JOB_NN" NOT NULL ENABLE, 
	"SALARY" NUMBER(8,2), 
	"COMMISSION_PCT" NUMBER(2,2), 
	"MANAGER_ID" NUMBER(6,0), 
	"DEPARTMENT_ID" NUMBER(4,0), 
	 CONSTRAINT "OEHR_EMP_SALARY_MIN" CHECK (salary > 0) ENABLE, 
	 CONSTRAINT "OEHR_EMP_EMP_ID_PK" PRIMARY KEY ("EMPLOYEE_ID")
  USING INDEX  ENABLE, 
	 CONSTRAINT "OEHR_EMP_EMAIL_UK" UNIQUE ("EMAIL")
  USING INDEX  ENABLE
   ) ;

  CREATE TABLE "OEHR_INVENTORIES" 
   (	"PRODUCT_ID" NUMBER(6,0), 
	"WAREHOUSE_ID" NUMBER(3,0) CONSTRAINT "OEHR_INVENTORY_WAREHOUSE_ID_NN" NOT NULL ENABLE, 
	"QUANTITY_ON_HAND" NUMBER(8,0) CONSTRAINT "OEHR_INVENTORY_QOH_NN" NOT NULL ENABLE, 
	 CONSTRAINT "OEHR_INVENTORY_PK" PRIMARY KEY ("PRODUCT_ID", "WAREHOUSE_ID") DISABLE
   ) ;

  CREATE TABLE "OEHR_JOBS" 
   (	"JOB_ID" VARCHAR2(10), 
	"JOB_TITLE" VARCHAR2(35) CONSTRAINT "OEHR_JOB_TITLE_NN" NOT NULL ENABLE, 
	"MIN_SALARY" NUMBER(6,0), 
	"MAX_SALARY" NUMBER(6,0), 
	 CONSTRAINT "OEHR_JOB_ID_PK" PRIMARY KEY ("JOB_ID")
  USING INDEX  ENABLE
   ) ;

  CREATE TABLE "OEHR_JOB_HISTORY" 
   (	"EMPLOYEE_ID" NUMBER(6,0) CONSTRAINT "OEHR_JHIST_EMPLOYEE_NN" NOT NULL ENABLE, 
	"START_DATE" DATE CONSTRAINT "OEHR_JHIST_START_DATE_NN" NOT NULL ENABLE, 
	"END_DATE" DATE CONSTRAINT "OEHR_JHIST_END_DATE_NN" NOT NULL ENABLE, 
	"JOB_ID" VARCHAR2(10) CONSTRAINT "OEHR_JHIST_JOB_NN" NOT NULL ENABLE, 
	"DEPARTMENT_ID" NUMBER(4,0), 
	 CONSTRAINT "OEHR_JHIST_DATE_INTERVAL" CHECK (end_date >= start_date) ENABLE
   ) ;

  CREATE TABLE "OEHR_LOCATIONS" 
   (	"LOCATION_ID" NUMBER(4,0) GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9900 INCREMENT BY 100 START WITH 3300 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"STREET_ADDRESS" VARCHAR2(40), 
	"POSTAL_CODE" VARCHAR2(12), 
	"CITY" VARCHAR2(30) CONSTRAINT "OEHR_LOC_CITY_NN" NOT NULL ENABLE, 
	"STATE_PROVINCE" VARCHAR2(25), 
	"COUNTRY_ID" CHAR(2), 
	 CONSTRAINT "OEHR_LOC_ID_PK" PRIMARY KEY ("LOCATION_ID")
  USING INDEX  ENABLE
   ) ;

  CREATE TABLE "OEHR_ORDERS" 
   (	"ORDER_ID" NUMBER(12,0) GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 2460 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"ORDER_DATE" TIMESTAMP (6) WITH TIME ZONE CONSTRAINT "ORDER_DATE_NN" NOT NULL ENABLE, 
	"ORDER_MODE" VARCHAR2(8), 
	"CUSTOMER_ID" NUMBER(6,0) CONSTRAINT "OEHR_ORDER_CUSTOMER_ID_NN" NOT NULL ENABLE, 
	"ORDER_STATUS" NUMBER(2,0), 
	"ORDER_TOTAL" NUMBER(8,2), 
	"SALES_REP_ID" NUMBER(6,0), 
	"PROMOTION_ID" NUMBER(6,0), 
	 CONSTRAINT "OEHR_ORDER_MODE_LOV" CHECK (order_mode in ('direct','online')) ENABLE, 
	 CONSTRAINT "OEHR_ORDER_TOTAL_MIN" CHECK (order_total >= 0) ENABLE, 
	 CONSTRAINT "OEHR_ORDER_PK" PRIMARY KEY ("ORDER_ID")
  USING INDEX  ENABLE
   ) ;

  CREATE TABLE "OEHR_ORDER_ITEMS" 
   (	"ORDER_ID" NUMBER(12,0), 
	"LINE_ITEM_ID" NUMBER(3,0) CONSTRAINT "ORD_ITEM_LINE_ITEM_NN" NOT NULL ENABLE, 
	"PRODUCT_ID" NUMBER(6,0) CONSTRAINT "ORD_ITEM_PROD_NN" NOT NULL ENABLE, 
	"UNIT_PRICE" NUMBER(8,2), 
	"QUANTITY" NUMBER(8,0), 
	"ORDER_ITEM_ID" NUMBER(12,0) GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 999999999999 INCREMENT BY 1 START WITH 665 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	 CONSTRAINT "OEHR_ORDER_ITEMS_PK" PRIMARY KEY ("ORDER_ITEM_ID")
  USING INDEX  ENABLE
   ) ;

  CREATE TABLE "OEHR_PRODUCT_DESCRIPTIONS" 
   (	"PRODUCT_ID" NUMBER(6,0), 
	"LANGUAGE_ID" VARCHAR2(3), 
	"TRANSLATED_NAME" NVARCHAR2(50) CONSTRAINT "OEHR_TRANSLATED_NAME_NN" NOT NULL ENABLE, 
	"TRANSLATED_DESCRIPTION" NVARCHAR2(2000) CONSTRAINT "OEHR_TRANSLATED_DESC_NN" NOT NULL ENABLE, 
	 CONSTRAINT "OEHR_PROD_DESC_PK" PRIMARY KEY ("PRODUCT_ID", "LANGUAGE_ID")
  USING INDEX  ENABLE
   ) ;

  CREATE TABLE "OEHR_PRODUCT_INFORMATION" 
   (	"PRODUCT_ID" NUMBER(6,0) GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 999999 INCREMENT BY 1 START WITH 3520 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"PRODUCT_NAME" VARCHAR2(50), 
	"PRODUCT_DESCRIPTION" VARCHAR2(2000), 
	"CATEGORY_ID" NUMBER(2,0), 
	"WEIGHT_CLASS" NUMBER(1,0), 
	"WARRANTY_PERIOD" INTERVAL YEAR (2) TO MONTH, 
	"SUPPLIER_ID" NUMBER(6,0), 
	"PRODUCT_STATUS" VARCHAR2(20), 
	"LIST_PRICE" NUMBER(8,2), 
	"MIN_PRICE" NUMBER(8,2), 
	"CATALOG_URL" VARCHAR2(50), 
	 CONSTRAINT "OEHR_PRODUCT_STATUS_LOV" CHECK (product_status in (  'orderable'
                                , 'planned'
                                , 'under development'
                                , 'obsolete')) ENABLE, 
	 CONSTRAINT "OEHR_PRODUCT_INFO_PK" PRIMARY KEY ("PRODUCT_ID")
  USING INDEX  ENABLE
   ) ;

  CREATE TABLE "OEHR_PROMOTIONS" 
   (	"PROMO_ID" NUMBER(6,0) GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 999999 INCREMENT BY 1 START WITH 3 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"PROMO_NAME" VARCHAR2(20), 
	 CONSTRAINT "OEHR_PROMO_ID_PK" PRIMARY KEY ("PROMO_ID")
  USING INDEX  ENABLE
   ) ;

  CREATE TABLE "OEHR_REGIONS" 
   (	"REGION_ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9900 INCREMENT BY 100 START WITH 3300 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"REGION_NAME" VARCHAR2(25), 
	 CONSTRAINT "OEHR_REG_ID_PK" PRIMARY KEY ("REGION_ID")
  USING INDEX  ENABLE
   ) ;

  CREATE TABLE "OEHR_WAREHOUSES" 
   (	"WAREHOUSE_ID" NUMBER(3,0) GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 999 INCREMENT BY 1 START WITH 10 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"WAREHOUSE_NAME" VARCHAR2(35), 
	"LOCATION_ID" NUMBER(4,0), 
	 CONSTRAINT "OEHR_WAREHOUSES_PK" PRIMARY KEY ("WAREHOUSE_ID")
  USING INDEX  ENABLE
   ) ;

  ALTER TABLE "OEHR_COUNTRIES" ADD CONSTRAINT "OEHR_COUNTR_REG_FK" FOREIGN KEY ("REGION_ID")
	  REFERENCES "OEHR_REGIONS" ("REGION_ID") ENABLE;

  CREATE INDEX "OEHR_COUNTRY_REGION_IX" ON "OEHR_COUNTRIES" ("REGION_ID") 
  ;

   COMMENT ON COLUMN "OEHR_COUNTRIES"."COUNTRY_ID" IS 'Primary key of oehr_countries table.';
   COMMENT ON COLUMN "OEHR_COUNTRIES"."REGION_ID" IS 'Region ID for the country. Foreign key to region_id column in the oehr_departments table.';
   COMMENT ON TABLE "OEHR_COUNTRIES"  IS 'oehr_country table. Contains 25 rows. References with oehr_locations table.';

  ALTER TABLE "OEHR_CUSTOMERS" ADD CONSTRAINT "OEHR_CUST_ACCT_MGR_FK" FOREIGN KEY ("ACCOUNT_MGR_ID")
	  REFERENCES "OEHR_EMPLOYEES" ("EMPLOYEE_ID") ON DELETE SET NULL ENABLE;

  CREATE INDEX "OEHR_CUST_ACCOUNT_MANAGER_IX" ON "OEHR_CUSTOMERS" ("ACCOUNT_MGR_ID") 
  ;

  CREATE INDEX "OEHR_CUST_EMAIL_IX" ON "OEHR_CUSTOMERS" ("CUST_EMAIL") 
  ;

  CREATE INDEX "OEHR_CUST_LNAME_IX" ON "OEHR_CUSTOMERS" ("CUST_LAST_NAME") 
  ;

   COMMENT ON COLUMN "OEHR_CUSTOMERS"."CUSTOMER_ID" IS 'Primary key column.';
   COMMENT ON COLUMN "OEHR_CUSTOMERS"."CUST_FIRST_NAME" IS 'NOT NULL constraint.';
   COMMENT ON COLUMN "OEHR_CUSTOMERS"."CUST_LAST_NAME" IS 'NOT NULL constraint.';
   COMMENT ON COLUMN "OEHR_CUSTOMERS"."STREET_ADDRESS" IS 'Modified column to maintain customer street address.';
   COMMENT ON COLUMN "OEHR_CUSTOMERS"."POSTAL_CODE" IS 'Modified column to maintain customer postal code.';
   COMMENT ON COLUMN "OEHR_CUSTOMERS"."CITY" IS 'Modified column to maintain customer city.';
   COMMENT ON COLUMN "OEHR_CUSTOMERS"."STATE_PROVINCE" IS 'Modified column to maintain customer state or province.';
   COMMENT ON COLUMN "OEHR_CUSTOMERS"."COUNTRY_ID" IS 'Modified column to maintain customer country id.';
   COMMENT ON COLUMN "OEHR_CUSTOMERS"."PHONE_NUMBER" IS 'Modified column to maintain customer phone number.';
   COMMENT ON COLUMN "OEHR_CUSTOMERS"."CREDIT_LIMIT" IS 'Check constraint.';
   COMMENT ON COLUMN "OEHR_CUSTOMERS"."ACCOUNT_MGR_ID" IS 'References oehr_employees.employee_id.';
   COMMENT ON TABLE "OEHR_CUSTOMERS"  IS 'Contains customers data either entered by an employee or by the customer him/herself over the Web.';

  ALTER TABLE "OEHR_DEPARTMENTS" ADD CONSTRAINT "OEHR_DEPT_LOC_FK" FOREIGN KEY ("LOCATION_ID")
	  REFERENCES "OEHR_LOCATIONS" ("LOCATION_ID") ENABLE;
  ALTER TABLE "OEHR_DEPARTMENTS" ADD CONSTRAINT "OEHR_DEPT_MGR_FK" FOREIGN KEY ("MANAGER_ID")
	  REFERENCES "OEHR_EMPLOYEES" ("EMPLOYEE_ID") ENABLE;

  CREATE INDEX "OEHR_DEPT_LOCATION_IX" ON "OEHR_DEPARTMENTS" ("LOCATION_ID") 
  ;

  CREATE INDEX "OEHR_DEPT_MANAGER_IX" ON "OEHR_DEPARTMENTS" ("MANAGER_ID") 
  ;

   COMMENT ON COLUMN "OEHR_DEPARTMENTS"."DEPARTMENT_ID" IS 'Primary key column of oehr_departments table.';
   COMMENT ON COLUMN "OEHR_DEPARTMENTS"."DEPARTMENT_NAME" IS 'A not null column that shows name of a department. Administration, Marketing, Purchasing, 
Human Resources, Shipping, IT, Executive, Public Relations, Sales, Finance, and Accounting. ';
   COMMENT ON COLUMN "OEHR_DEPARTMENTS"."MANAGER_ID" IS 'Manager_id of a department. Foreign key to employee_id column of oehr_employees table. 
The manager_id column of the oehr_employee table references this column.';
   COMMENT ON COLUMN "OEHR_DEPARTMENTS"."LOCATION_ID" IS 'Location id where a department is located. Foreign key to location_id column of oehr_locations table.';
   COMMENT ON TABLE "OEHR_DEPARTMENTS"  IS 'Departments table that shows details of departments where employees work. Contains 27 rows references with oehr_locations, oehr_employees, and oehr_job_history tables.';

  ALTER TABLE "OEHR_EMPLOYEES" ADD CONSTRAINT "OEHR_EMP_DEPT_FK" FOREIGN KEY ("DEPARTMENT_ID")
	  REFERENCES "OEHR_DEPARTMENTS" ("DEPARTMENT_ID") ENABLE;
  ALTER TABLE "OEHR_EMPLOYEES" ADD CONSTRAINT "OEHR_EMP_JOB_FK" FOREIGN KEY ("JOB_ID")
	  REFERENCES "OEHR_JOBS" ("JOB_ID") ENABLE;
  ALTER TABLE "OEHR_EMPLOYEES" ADD CONSTRAINT "OEHR_EMP_MANAGER_FK" FOREIGN KEY ("MANAGER_ID")
	  REFERENCES "OEHR_EMPLOYEES" ("EMPLOYEE_ID") ENABLE;

  CREATE INDEX "OEHR_EMP_DEPARTMENT_IX" ON "OEHR_EMPLOYEES" ("DEPARTMENT_ID") 
  ;

  CREATE INDEX "OEHR_EMP_JOB_IX" ON "OEHR_EMPLOYEES" ("JOB_ID") 
  ;

  CREATE INDEX "OEHR_EMP_MANAGER_IX" ON "OEHR_EMPLOYEES" ("MANAGER_ID") 
  ;

  CREATE INDEX "OEHR_EMP_NAME_IX" ON "OEHR_EMPLOYEES" ("LAST_NAME", "FIRST_NAME") 
  ;

   COMMENT ON COLUMN "OEHR_EMPLOYEES"."EMPLOYEE_ID" IS 'Primary key of oehr_employees table.';
   COMMENT ON COLUMN "OEHR_EMPLOYEES"."FIRST_NAME" IS 'First name of the employee. A not null column.';
   COMMENT ON COLUMN "OEHR_EMPLOYEES"."LAST_NAME" IS 'Last name of the employee. A not null column.';
   COMMENT ON COLUMN "OEHR_EMPLOYEES"."EMAIL" IS 'Email id of the employee';
   COMMENT ON COLUMN "OEHR_EMPLOYEES"."PHONE_NUMBER" IS 'Phone number of the employee includes country code and area code';
   COMMENT ON COLUMN "OEHR_EMPLOYEES"."HIRE_DATE" IS 'Date when the employee started on this job. A not null column.';
   COMMENT ON COLUMN "OEHR_EMPLOYEES"."JOB_ID" IS 'Current job of the employee foreign key to job_id column of the oehr_jobs table. A not null column.';
   COMMENT ON COLUMN "OEHR_EMPLOYEES"."SALARY" IS 'Monthly salary of the employee. Must be greater than zero (enforced by constraint oehr_emp_salary_min)';
   COMMENT ON COLUMN "OEHR_EMPLOYEES"."COMMISSION_PCT" IS 'Commission percentage of the employee Only employees in sales department elgible for commission percentage';
   COMMENT ON COLUMN "OEHR_EMPLOYEES"."MANAGER_ID" IS 'Manager id of the employee has same domain as manager_id in 
oehr_departments table. Foreign key to employee_id column of oehr_employees table.
(useful for reflexive joins and CONNECT BY query)';
   COMMENT ON COLUMN "OEHR_EMPLOYEES"."DEPARTMENT_ID" IS 'Department id where employee works foreign key to department_id column of the oehr_departments table';
   COMMENT ON TABLE "OEHR_EMPLOYEES"  IS 'oehr_employees table. Contains 107 rows. References with oehr_departments, 
oehr_jobs, oehr_job_history tables. Contains a self reference.';

  CREATE OR REPLACE EDITIONABLE TRIGGER "OEHR_UPDATE_JOB_HISTORY" 
  after update of job_id, department_id on oehr_employees
  for each row
declare
  l_sdate date;
begin
  if (:old.job_id != :new.job_id 
  or :old.department_id != :new.department_id) then
    for c1 in (select max(end_date) prev_start_date 
               from oehr_job_history
               where employee_id = :old.employee_id
              ) loop
      l_sdate := c1.prev_start_date+((24/60)/60);
    end loop;
   oehr_add_job_history(  :old.employee_id
                         , nvl(l_sdate,:old.hire_date)
                         , sysdate
                         , :old.job_id
                         , :old.department_id);
  end if;
end;
/
ALTER TRIGGER "OEHR_UPDATE_JOB_HISTORY" ENABLE;

  ALTER TABLE "OEHR_INVENTORIES" ADD CONSTRAINT "OEHR_INVENTORIES_PRODUCT_ID_FK" FOREIGN KEY ("PRODUCT_ID")
	  REFERENCES "OEHR_PRODUCT_INFORMATION" ("PRODUCT_ID") ENABLE;
  ALTER TABLE "OEHR_INVENTORIES" ADD CONSTRAINT "OEHR_INVENTORIES_WAREHOUSES_FK" FOREIGN KEY ("WAREHOUSE_ID")
	  REFERENCES "OEHR_WAREHOUSES" ("WAREHOUSE_ID") ENABLE;

  CREATE INDEX "OEHR_INVENTORY_IX" ON "OEHR_INVENTORIES" ("WAREHOUSE_ID", "PRODUCT_ID") 
  ;

  CREATE INDEX "OEHR_INV_PRODUCT_IX" ON "OEHR_INVENTORIES" ("PRODUCT_ID") 
  ;

   COMMENT ON COLUMN "OEHR_INVENTORIES"."PRODUCT_ID" IS 'Part of concatenated primary key, references oehr_product_information.product_id.';
   COMMENT ON COLUMN "OEHR_INVENTORIES"."WAREHOUSE_ID" IS 'Part of concatenated primary key, references oehr_warehouses.warehouse_id.';
   COMMENT ON TABLE "OEHR_INVENTORIES"  IS 'Tracks availability of products by product_it and warehouse_id.';

   COMMENT ON COLUMN "OEHR_JOBS"."JOB_ID" IS 'Primary key of jobs oehr_table.';
   COMMENT ON COLUMN "OEHR_JOBS"."JOB_TITLE" IS 'A not null column that shows job title, e.g. AD_VP, FI_ACCOUNTANT';
   COMMENT ON COLUMN "OEHR_JOBS"."MIN_SALARY" IS 'Minimum salary for a job title.';
   COMMENT ON COLUMN "OEHR_JOBS"."MAX_SALARY" IS 'Maximum salary for a job title';
   COMMENT ON TABLE "OEHR_JOBS"  IS 'jobs table with job titles and salary ranges. Contains 19 rows.
References with oehr_employees and oehr_job_history table.';

  ALTER TABLE "OEHR_JOB_HISTORY" ADD CONSTRAINT "OEHR_JHIST_DEPT_FK" FOREIGN KEY ("DEPARTMENT_ID")
	  REFERENCES "OEHR_DEPARTMENTS" ("DEPARTMENT_ID") ENABLE;
  ALTER TABLE "OEHR_JOB_HISTORY" ADD CONSTRAINT "OEHR_JHIST_EMP_FK" FOREIGN KEY ("EMPLOYEE_ID")
	  REFERENCES "OEHR_EMPLOYEES" ("EMPLOYEE_ID") ENABLE;
  ALTER TABLE "OEHR_JOB_HISTORY" ADD CONSTRAINT "OEHR_JHIST_JOB_FK" FOREIGN KEY ("JOB_ID")
	  REFERENCES "OEHR_JOBS" ("JOB_ID") ENABLE;

  CREATE INDEX "OEHR_JHIST_DEPARTMENT_IX" ON "OEHR_JOB_HISTORY" ("DEPARTMENT_ID") 
  ;

  CREATE INDEX "OEHR_JHIST_EMPLOYEE_IX" ON "OEHR_JOB_HISTORY" ("EMPLOYEE_ID") 
  ;

  CREATE INDEX "OEHR_JHIST_JOB_IX" ON "OEHR_JOB_HISTORY" ("JOB_ID") 
  ;

   COMMENT ON COLUMN "OEHR_JOB_HISTORY"."EMPLOYEE_ID" IS 'A not null column in the complex primary key employee_id+start_date.
Foreign key to employee_id column of the oehr_employee table';
   COMMENT ON COLUMN "OEHR_JOB_HISTORY"."START_DATE" IS 'A not null column in the complex primary key employee_id+start_date. 
Must be less than the end_date of the oehr_job_history table. (enforced by 
constraint oehr_jhist_date_interval)';
   COMMENT ON COLUMN "OEHR_JOB_HISTORY"."END_DATE" IS 'Last day of the employee in this job role. A not null column. Must be 
greater than the start_date of the oehr_job_history table. 
(enforced by constraint oehr_jhist_date_interval)';
   COMMENT ON COLUMN "OEHR_JOB_HISTORY"."JOB_ID" IS 'Job role in which the employee worked in the past foreign key to 
job_id column in the oehr_jobs table. A not null column.';
   COMMENT ON COLUMN "OEHR_JOB_HISTORY"."DEPARTMENT_ID" IS 'Department id in which the employee worked in the past foreign key to deparment_id column in the oehr_departments table';
   COMMENT ON TABLE "OEHR_JOB_HISTORY"  IS 'Table that stores job history of the employees. If an employee 
changes departments within the job or changes jobs within the department, 
new rows get inserted into this table with old job information of the 
employee. Contains a complex primary key: employee_id+start_date.
Contains 25 rows. References with oehr_jobs, oehr_employees, and oehr_departments tables.';

  ALTER TABLE "OEHR_LOCATIONS" ADD CONSTRAINT "OEHR_LOC_C_ID_FK" FOREIGN KEY ("COUNTRY_ID")
	  REFERENCES "OEHR_COUNTRIES" ("COUNTRY_ID") ENABLE;

  CREATE INDEX "OEHR_LOC_CITY_IX" ON "OEHR_LOCATIONS" ("CITY") 
  ;

  CREATE INDEX "OEHR_LOC_COUNTRY_IX" ON "OEHR_LOCATIONS" ("COUNTRY_ID") 
  ;

  CREATE INDEX "OEHR_LOC_STATE_PROVINCE_IX" ON "OEHR_LOCATIONS" ("STATE_PROVINCE") 
  ;

   COMMENT ON COLUMN "OEHR_LOCATIONS"."LOCATION_ID" IS 'Primary key of oehr_locations table';
   COMMENT ON COLUMN "OEHR_LOCATIONS"."STREET_ADDRESS" IS 'Street address of an office, warehouse, or production site of a company. Contains building number and street name';
   COMMENT ON COLUMN "OEHR_LOCATIONS"."POSTAL_CODE" IS 'Postal code of the location of an office, warehouse, or production site of a company. ';
   COMMENT ON COLUMN "OEHR_LOCATIONS"."CITY" IS 'A not null column that shows city where an office, warehouse, or production site of a company is located. ';
   COMMENT ON COLUMN "OEHR_LOCATIONS"."STATE_PROVINCE" IS 'State or Province where an office, warehouse, or production site of a company is located.';
   COMMENT ON COLUMN "OEHR_LOCATIONS"."COUNTRY_ID" IS 'Country where an office, warehouse, or production site of a company is located. Foreign key to country_id column of the oehr_countries table.';
   COMMENT ON TABLE "OEHR_LOCATIONS"  IS 'Locations table that contains specific address of a specific office,
warehouse, and/or production site of a company. Does not store addresses /
locations of customers. Contains 23 rows references with the
oehr_departments and oehr_countries tables. ';

  ALTER TABLE "OEHR_ORDERS" ADD CONSTRAINT "OEHR_ORDERS_CUSTOMER_ID_FK" FOREIGN KEY ("CUSTOMER_ID")
	  REFERENCES "OEHR_CUSTOMERS" ("CUSTOMER_ID") ON DELETE SET NULL ENABLE;
  ALTER TABLE "OEHR_ORDERS" ADD CONSTRAINT "OEHR_ORDERS_SALES_REP_FK" FOREIGN KEY ("SALES_REP_ID")
	  REFERENCES "OEHR_EMPLOYEES" ("EMPLOYEE_ID") ON DELETE SET NULL ENABLE;

  CREATE INDEX "OEHR_ORD_CUSTOMER_IX" ON "OEHR_ORDERS" ("CUSTOMER_ID") 
  ;

  CREATE INDEX "OEHR_ORD_SALES_REP_IX" ON "OEHR_ORDERS" ("SALES_REP_ID") 
  ;

   COMMENT ON COLUMN "OEHR_ORDERS"."ORDER_ID" IS 'PRIMARY KEY column.';
   COMMENT ON COLUMN "OEHR_ORDERS"."ORDER_DATE" IS 'TIMESTAMP WITH TIME ZONE column, NOT NULL constraint.';
   COMMENT ON COLUMN "OEHR_ORDERS"."ORDER_MODE" IS 'CHECK constraint.';
   COMMENT ON COLUMN "OEHR_ORDERS"."ORDER_STATUS" IS '0: Not fully entered, 1: Entered, 2: Canceled - bad credit, -
3: Canceled - by customer, 4: Shipped - whole order, -
5: Shipped - replacement items, 6: Shipped - backlog on items, -
7: Shipped - special delivery, 8: Shipped - billed, 9: Shipped - payment plan,-
10: Shipped - paid';
   COMMENT ON COLUMN "OEHR_ORDERS"."ORDER_TOTAL" IS 'CHECK constraint.';
   COMMENT ON COLUMN "OEHR_ORDERS"."SALES_REP_ID" IS 'References oehr_employees.employee_id.';
   COMMENT ON COLUMN "OEHR_ORDERS"."PROMOTION_ID" IS 'Sales promotion ID. Used in SH schema';
   COMMENT ON TABLE "OEHR_ORDERS"  IS 'Contains orders entered by a salesperson as well as over the Web.';

  ALTER TABLE "OEHR_ORDER_ITEMS" ADD CONSTRAINT "OEHR_ORDER_ITEMS_ORDER_ID_FK" FOREIGN KEY ("ORDER_ID")
	  REFERENCES "OEHR_ORDERS" ("ORDER_ID") ON DELETE CASCADE ENABLE;
  ALTER TABLE "OEHR_ORDER_ITEMS" ADD CONSTRAINT "OEHR_ORDER_ITEMS_PRODUCT_ID_FK" FOREIGN KEY ("PRODUCT_ID")
	  REFERENCES "OEHR_PRODUCT_INFORMATION" ("PRODUCT_ID") ENABLE;

  CREATE INDEX "OEHR_ITEM_ORDER_IX" ON "OEHR_ORDER_ITEMS" ("ORDER_ID") 
  ;

  CREATE INDEX "OEHR_ITEM_PRODUCT_IX" ON "OEHR_ORDER_ITEMS" ("PRODUCT_ID") 
  ;

  CREATE UNIQUE INDEX "OEHR_ORDER_ITEMS_UK" ON "OEHR_ORDER_ITEMS" ("ORDER_ID", "PRODUCT_ID") 
  ;

   COMMENT ON COLUMN "OEHR_ORDER_ITEMS"."ORDER_ID" IS 'Part of concatenated primary key, references orders.order_id.';
   COMMENT ON COLUMN "OEHR_ORDER_ITEMS"."LINE_ITEM_ID" IS 'Part of concatenated primary key.';
   COMMENT ON COLUMN "OEHR_ORDER_ITEMS"."PRODUCT_ID" IS 'References oehr_product_information.product_id.';
   COMMENT ON TABLE "OEHR_ORDER_ITEMS"  IS 'Example of many-to-many resolution.';

  CREATE OR REPLACE EDITIONABLE TRIGGER "OEHR_OI_PK" 
  before insert on oehr_order_items
  for each row
declare
  new_line number;
begin
  if :new.line_item_id is null then
    select (nvl(max(line_item_id),0)+1) 
    into new_line  
    from oehr_order_items 
    where order_id = :new.order_id;  
    :new.line_item_id := new_line;  
  end if;
end;
/
ALTER TRIGGER "OEHR_OI_PK" ENABLE;

  ALTER TABLE "OEHR_PRODUCT_DESCRIPTIONS" ADD CONSTRAINT "OEHR_PD_PRODUCT_ID_FK" FOREIGN KEY ("PRODUCT_ID")
	  REFERENCES "OEHR_PRODUCT_INFORMATION" ("PRODUCT_ID") ENABLE;

  CREATE INDEX "OEHR_PROD_DESC_PROD_IX" ON "OEHR_PRODUCT_DESCRIPTIONS" ("PRODUCT_ID") 
  ;

  CREATE INDEX "OEHR_PROD_DESC_TRANSLATED_IX" ON "OEHR_PRODUCT_DESCRIPTIONS" ("TRANSLATED_NAME") 
  ;

   COMMENT ON COLUMN "OEHR_PRODUCT_DESCRIPTIONS"."PRODUCT_ID" IS 'Primary key column.';
   COMMENT ON COLUMN "OEHR_PRODUCT_DESCRIPTIONS"."LANGUAGE_ID" IS 'Primary key column.';
   COMMENT ON TABLE "OEHR_PRODUCT_DESCRIPTIONS"  IS 'Non-industry-specific design, allows selection of NLS-setting-specific data derived at runtime, for example using the products view.';

  CREATE INDEX "OEHR_PROD_SUPPLIER_IX" ON "OEHR_PRODUCT_INFORMATION" ("SUPPLIER_ID") 
  ;

   COMMENT ON COLUMN "OEHR_PRODUCT_INFORMATION"."PRODUCT_ID" IS 'Primary key column.';
   COMMENT ON COLUMN "OEHR_PRODUCT_INFORMATION"."PRODUCT_DESCRIPTION" IS 'Primary language description corresponding to translated_description in
oehr_product_descriptions, added to provide non-NLS text columns for OC views to access.';
   COMMENT ON COLUMN "OEHR_PRODUCT_INFORMATION"."CATEGORY_ID" IS 'Low cardinality column, can be used for bitmap index. Schema SH uses it as foreign key';
   COMMENT ON COLUMN "OEHR_PRODUCT_INFORMATION"."WEIGHT_CLASS" IS 'Low cardinality column, can be used for bitmap index.';
   COMMENT ON COLUMN "OEHR_PRODUCT_INFORMATION"."WARRANTY_PERIOD" IS 'INTERVAL YEAER TO MONTH column, low cardinality, can be used for bitmap index.';
   COMMENT ON COLUMN "OEHR_PRODUCT_INFORMATION"."SUPPLIER_ID" IS 'Offers possibility of extensions outside Common Schema.';
   COMMENT ON COLUMN "OEHR_PRODUCT_INFORMATION"."PRODUCT_STATUS" IS 'Check constraint. Appropriate for complex rules, such as "All products in 
status PRODUCTION must have at least one inventory entry." Also appropriate 
for a trigger auditing status change.';
   COMMENT ON TABLE "OEHR_PRODUCT_INFORMATION"  IS 'Non-industry-specific data in various categories.';

   COMMENT ON COLUMN "OEHR_REGIONS"."REGION_ID" IS 'Primary key of oehr_regions table.';
   COMMENT ON COLUMN "OEHR_REGIONS"."REGION_NAME" IS 'Names of regions. Locations are in the countries of these regions.';
   COMMENT ON TABLE "OEHR_REGIONS"  IS 'Regions table that contains region numbers and names. Contains 4 rows references with the oehr_Countries table.';

  ALTER TABLE "OEHR_WAREHOUSES" ADD CONSTRAINT "OEHR_WAREHOUSES_LOCATION_FK" FOREIGN KEY ("LOCATION_ID")
	  REFERENCES "OEHR_LOCATIONS" ("LOCATION_ID") ON DELETE SET NULL ENABLE;

  CREATE INDEX "OEHR_WHS_LOCATION_IX" ON "OEHR_WAREHOUSES" ("LOCATION_ID") 
  ;

   COMMENT ON COLUMN "OEHR_WAREHOUSES"."WAREHOUSE_ID" IS 'Primary key column.';
   COMMENT ON COLUMN "OEHR_WAREHOUSES"."LOCATION_ID" IS 'Primary key column, references oehr_locations.location_id.';
   COMMENT ON TABLE "OEHR_WAREHOUSES"  IS 'Warehouse data unspecific to any industry.';

